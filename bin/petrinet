#!/usr/bin/env ruby

require 'optparse'
require "petrinet"

options = { transitions: [] }
OptionParser.new do |opts|
  opts.banner = "Usage: petrinet [options]"

  opts.on("-t", "--transition=TRANSITION", "Specify a transition to fire. Can be specified multiple times.") do |t|
    options[:transitions] << t.to_sym
  end

  opts.on("-o", "--output=PATH", "Specify a file or directory to write the SVG(s)") do |o|
    options[:output] = o
  end
end.parse!

pnml = ARGV[0]

$n = 0
def write_svg(net, options)
  path = "#{options[:output]}/#{'%03d' % $n}.svg"
  File.open(path, 'w:UTF-8') {|io| io.puts(net.to_svg)}
  $n += 1
end

net = Petrinet::Net.from_pnml(IO.read(pnml))
if options[:transitions].empty?
  if options[:output]
    write_svg(net, options)
  else
    STDOUT.puts net.to_svg
  end
else
  if options[:output].nil?
    raise "Must specify --output when --transition is used"
  end
  write_svg(net, options)
  options[:transitions].each do |transition|
    net = net.fire(transition)
    write_svg(net, options)
  end
end
